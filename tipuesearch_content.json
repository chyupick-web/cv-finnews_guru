{"pages":[{"title":"404: Page not found","text":"","tags":"pages","url":"404-not-found/"},{"title":"410: Page is gone","text":"","tags":"pages","url":"410-gone/"},{"title":"500: Internal server error","text":"","tags":"pages","url":"500-error/"},{"title":"Community","text":"Open Science Open science is the movement to make scientific research, data and dissemination accessible to all levels of an inquiring society, amateur or professional ( Wikipedia ). Open Radar Science In order to make open science work, each community has to develop specific solutions. openradarscience.org aims to provide a collaborative platform to develop, share and integrate free and open source community software for weather radar data processing. Open source: a necessary, not a sufficient condition We are aware that open source software is only one component of open science: consider it a necessary, not a sufficient condition to make research transparent and reproducible. It should come along with efforts to also make radar data open. That is why we will also try to collect information about open access to weather radar data products. Can you help us? Have a look at our open data page .","tags":"pages","url":"community/"},{"title":"The weather radar software community","text":"A community platform for free and open source weather radar software. What is this about? You don't want to pay license fees? You don't want to commit to a black box software? You are concerned about the PhD student that comes after you? You want to efficiently collaborate with people around the world? You want to stand on the shoulders of giants instead of reinventing the wheel? You don't care if it's free, you just want it to work? If it's a yes to any of these questions, then have a closer look… Looking for software that suits your needs? You want to interact with your data, or to build applications? In research, operations, or in the private sector? Search the site in order to find solutions that suit your specific needs. Use the tags, the search tool bar, or see the complete list of projects . Providing a useful software product? Have you developed a software for weather radar data processing? We invite you to share and advertise your solution here - as long as it's open source licensed! Just fork this repo , add your product in contents/posts , and request the changes to be pulled. More details here . Get more background… …from our papers on The Emergence of Open Source Software for the Weather Radar Community and our Open Virtual Machine for Cross-Platform Weather Radar Science .","tags":"pages","url":"home/"},{"title":"List of open weather radar data repositories","text":"German Weather Service ( DWD ) https://opendata.dwd.de National Oceanic and Atmospheric Administration ( NOAA ) https://www.ncdc.noaa.gov/data-access/radar-data Royal Netherlands Meteorological Institute ( KNMI ) https://data.knmi.nl/datasets?q=radar wradlib example data https://github.com/wradlib/wradlib-data","tags":"pages","url":"opendata/"},{"title":"Open source weather radar software","text":"Community Effort OSS Weather Radar Virtual Machine Related projects (alphabetical order) ARM -PyArt ARTView BALTRAD MMM -Py MultiDop PyRadarMet pysteps PyTDA RadarTools for ArcGID Radx rainymotion RSL RSL in IDL wradlib","tags":"pages","url":"projects/"},{"title":"rainymotion","text":"Quick description rainymotion is a Python library for radar-based precipitation nowcasting based on optical flow techniques. The main idea is to provide a stack of open models which can serve as a transparent benchmark for further development of nowcasting techniques. An extensive verification study in Germany has shown that the rainymotion models based on Dense optical flow are at least equivalent if not superior to state-of-the-art operational nowcasting techniques. Homepage https://rainymotion.readthedocs.io Code Repository https://github.com/hydrogo/rainymotion Software Documentation https://rainymotion.readthedocs.io License model MIT Year of first release 2018 Main programming language Python Supported platforms Linux, Mac, Windows Type of software API /Library References Ayzel, G., Heistermann, M., Winterrath, T. (2018): Optical flow models as an open benchmark for radar-based precipitation nowcasting (rainymotion v0.1), manuscript submitted to Geoscientific Model Development.","tags":"Projects","url":"2018/08/rainymotion/"},{"title":"pysteps","text":"Quick description pysteps is a community that develops and maintains an easy to use, modular and open source python framework for precipitation short-term ensemble prediction systems. Homepage https://pysteps.github.io/ Code Repositories The pysteps package https://github.com/pySTEPS/pysteps Sample data https://github.com/pySTEPS/pysteps-data Software Documentation https://pysteps.readthedocs.io License model BSD -3 Year of first release 2018 Main programming laguage(s) Python Supported platforms Linux, Mac, Windows Type of software API /Library Reference Pulkkinen, S., D. Nerini, A. Perez Hortal, C. Velasco-Forero, U. Germann, A. Seed, and L. Foresti, 2019: Pysteps: an open-source Python library for probabilistic precipitation nowcasting (v1.0). Geosci. Model Dev. Discuss., doi:10.5194/gmd-2019-94, in review .","tags":"Projects","url":"2018/08/pysteps/"},{"title":"ARM Py- ART","text":"Quick description The Python ARM Radar Toolkit, Py- ART , is an open source Python module containing a growing collection of weather radar algorithms and utilities build on top of the Scientific Python stack and distributed under the 3-Clause BSD license. Py- ART is used by the Atmospheric Radiation Measurement ( ARM ) Climate Research Facility for working with data from a number of precipitation and cloud radars, but has been designed so that it can be used by others in the radar and atmospheric communities to examine, processes, and analyse data from many types of weather radars. Homepage http://arm-doe.github.io/pyart/ Code Repository https://github.com/ ARM - DOE /pyart Software Documentation http://arm-doe.github.io/pyart/dev/index.html User group or forum page http://groups.google.com/group/pyart-users/ License model BSD Year of first release 2013 Main programming laguage(s) Python, Cython, C, FORTRAN Supported platforms Linux, Mac, Windows Type of software Application & API References Helmus, J.J. & Collis, S.M., (2016). The Python ARM Radar Toolkit (Py- ART ), a Library for Working with Weather Radar Data in the Python Programming Language. Journal of Open Research Software. 4(1), p.e25. DOI : http://doi.org/10.5334/jors.119","tags":"Projects","url":"2018/05/arm-pyart/"},{"title":"BALTRAD","text":"Quick description BALTRAD offers software for exchanging weather radar data in real time, and processing data using a common \"toolbox\" of algorithms. The data exchange functionality can be used stand-alone, as can the toolbox. While the focus is on creating an operational system, the design is also intended to help bridge the gap between research and operational communities. Homepage http://baltrad.eu Code Repository http://git.baltrad.eu/git Software Documentation http://git.baltrad.eu User group or forum page http://git.baltrad.eu/trac/wiki/cookbook https://groups.google.com/forum/#!forum/baltrad License model GNU Lesser General Public License ( LGPL ) Year of first release 2012 Main programming laguage(s) C, Java, Python Supported platforms Linux, Mac Type of software Application & API Further details N/A References Michelson, D., Henja, A., Ernes, S., Haase, G., Koistinen, J., Ośródka, K., Peltonen, T., Szewczykowski, M., and Szturc, J., (2018). BALTRAD Advanced Weather Radar Networking. Journal of Open Research Software. 6(1), p. 12. DOI : http://doi.org/10.5334/jors.193","tags":"Projects","url":"2018/05/baltrad/"},{"title":"OSS short course at ERAD 2018","text":"We will feature another 1-day open source software course on July 1st, 2018, at the 10th European Conference on Radar in Meteorology and Hydrology . If you have not registered, yet… maybe a late-bird registration is still possible! See here for further details.","tags":"News","url":"2018/05/announce_erad2018/"},{"title":"Open source - a necessary, not a sufficient criterion","text":"We are aware that open source software is only one component of open science: consider it a necessary, not a sufficient condition to make research transparent and reproducible. It should come along with efforts to also make radar data open. That is why we will also try to collect information about open access to weather radar data products. Can you help us? Have a look at our open data page , and report open data repositories!","tags":"News","url":"2018/05/andopendata/"},{"title":"Radx","text":"Quick description The Radx C++ package was developed at NCAR to provide support for the new CfRadial radar data format, and to provide translation between common radar data formats. Radx is designed to be run on LINUX and MacOSX platforms, but should also run on Windows under Cygwin. It comprises a C++ library, which may be used by developers, and a number of applications built on that library. Homepage https://ral.ucar.edu/projects/titan/docs/radial_formats/radx.html Code Repositories https://github.com/ NCAR /lrose-core Software Documentation https://ral.ucar.edu/projects/titan/docs/radial_formats/radx.html User group or forum page N/A License model BSD Year of first release 1990 Main programming laguage(s) C++ Supported platforms Linux, Mac Type of software API /library, application","tags":"Projects","url":"2018/05/radx/"},{"title":"openradarscience.org is online","text":"The open source software community specializing in weather radar has it's new web site up and running.","tags":"News","url":"2017/09/ors_webpage_announcment/"},{"title":"ARTView","text":"Quick description Visualization tool leveraging PyArt package. Allows browsing data and accessing some PyArt calculations. Also working toward Solo-like editing alternative. Homepage https://github.com/nguy/artview Code Repository https://github.com/nguy/artview Software Documentation N/A User group or forum page N/A License model BSD Year of first release 2015 Main programming laguage(s) Python Supported platforms Linux, Mac, Windows Type of software Application & API Further details Please see README for further information. References doi:10.5281/zenodo.27358","tags":"Projects","url":"2017/09/artview/"},{"title":"MMM -Py","text":"Marshall MRMS Mosaic Python Toolkit Quick description The National Oceanic and Atmospheric Administration ( NOAA ) regularly produces national 3D radar reflectivity mosaics via its Multi-Radar/Multi-Sensor ( MRMS ) system. These mosaics are wonderful for storm and precipitation analysis and research, but they are distributed in odd formats that NOAA is ever changing. Sometimes you just want to read a file and make a plot! This is what MMM -Py is for. With it, you can read any version of the MRMS radar mosaics, past or present, and you can analyze, plot, subsection, and output custom mosaics of your own, which MMM -Py can ingest later. MMM -Py is free and open source. It is capable of producing publication-ready figures and analyses, but it also can do quicklook plots so you can check out the cool storm that just happened. Homepage https://github.com/nasa/ MMM -Py Code Repository https://github.com/nasa/ MMM -Py Software Documentation https://github.com/nasa/ MMM -Py User group or forum page N/A License model NASA Open Source 3.0 Year of first release 2015 Main programming laguage(s) Python Supported platforms Linux. Mac Type of software API /Library Further details For more info about the latest version of MRMS , see: https://docs.google.com/document/d/1LeVcn_taIXZgzZb5JgWqaVr0xVs7GmA6RpHcb8ZGiwk/edit MMM -Py Installation MMM -Py works under Python 2.x on most Mac/Linux setups. Windows installation is currently untested. Put mmmpy.py in your PYTHONPATH You'll need the following Python packages. Most are easily obtained or already installed with common Python frameworks such as Anaconda ( http://continuum.io/downloads ): numpy, matplotlib, scipy, netCDF4, os, Basemap, struct, time, calendar, gzip Get MRMS -modified wgrib2 package from here ftp://ftp.nssl.noaa.gov/projects/ MRMS /GRIB2_DECODERS/MRMS_modified_wgrib2_v2.0.1-selectfiles.tgz Install wgrib2 and note the path to it. Modify the BASE_PATH, TMPDIR , WGRIB2_PATH, and WGRIB2_NAME global variables in mmmpy.py as necessary. TMPDIR is where intermediate netCDFs created by wgrib2 will go. Without wgrib2 MMM -Py can still read legacy MRMS binaries and netCDFs. Using MMM -Py To access everything: import mmmpy To see MMM -Py in action, check out the IPython notebooks provided in this distribution. The following conference presentation discusses MMM -Py (among other modules): https://ams.confex.com/ams/95Annual/webprogram/Paper262779.html MMM -Py was developed at the NASA Marshall Space Flight Center by Timothy Lang (timothy.j.lang@nasa.gov) See LICENSE file for NASA open source license information. References Lang, T. J., Python-based scientific analysis and visualization of precipitation systems at NASA Marshall Space Flight Center. 5th Symposium on Advances in Modeling and Analysis Using Python, American Meteorological Society, Phoenix, AZ . (available online at https://ams.confex.com/ams/95Annual/webprogram/Paper262779.html ); 2. Lang, T. J., S. A. Cummer, D. Petersen, L. Flores-Rivera, W. A. Lyons, D. R. MacGorman, and W. Beasley (2015), Large charge moment change lightning in the El Reno tornadic storm system, J. Geophys. Res. Atmos., Accepted.","tags":"Projects","url":"2017/09/mmm-py/"},{"title":"MultiDop","text":"Multiple-Doppler Radar Analysis Toolkit (MultiDop) Quick description MultiDop is a Python-based interface between the C-based DDA code developed at University of Oklahoma and the Python Atmospheric Radiation Measurement Radar Toolkit (Py- ART ) software developed at Argonne National Lab. Use this software to perform 3D wind analyses using 2-3 independent Doppler radars. Homepage https://github.com/nasa/MultiDop Code Repository https://github.com/nasa/MultiDop Software Documentation https://github.com/nasa/MultiDop User group or forum page N/A License model NASA Open Source Year of first release 2017 Main programming laguage(s) Python, C Supported platforms Linux, Mac, Windows Type of software Application & API Further details If you use this software to produce an analysis for a presentation or publication, you must cite the following papers: http://journals.ametsoc.org/doi/abs/10.1175/ 2009JTECHA1256 .1 (Shapiro et al. 2009, JTECH ) http://journals.ametsoc.org/doi/abs/10.1175/ JTECH -D-11-00019.1 (Potvin et al. 2012, JTECH ) References Shapiro, A., C. Potvin, and J. Gao, 2009: Use of a Vertical Vorticity Equation in Variational Dual-Doppler Wind Analysis. J. Atmos. Oceanic Technol., 26, 2089–2106, doi: 10.1175/ 2009JTECHA1256 .1.; Potvin, C., A. Shapiro, and M. Xue, 2012: Impact of a Vertical Vorticity Constraint in Variational Dual-Doppler Wind Analysis: Tests with Real and Simulated Supercell Data. J. Atmos. Oceanic Technol., 29, 32–49, doi: 10.1175/ JTECH -D-11-00019.1.","tags":"Projects","url":"2017/09/multidop/"},{"title":"Open Source Weather Radar Virtual Machine","text":"Quick description This projects creates a Linux Virtual Machine image ( VM ) with a number of open source weather radar software packages ( BALTRAD , Py- ART , Radx, RSL , and wradlib) which can be run using VirtualBox on a number of host OSes. The creation of this VM has been tested on Ubuntu 12.04 and Mac OS X 10.9 hosts running vagrant 1.5.4. Other host should be supported if a recent version of vagrant (1.3+) and VirtualBox can be installed. Homepage https://openradar.github.io/vm-docs Code Repository https://github.com/openradar/oss_weather_radar_vm Software Documentation https://github.com/openradar/oss_weather_radar_vm User group or forum page N/A License model N/A Year of first release 2014 Main programming laguage(s) Python, Cython, C, FORTRAN Supported platforms Linux, Mac, Windows Type of software Application & API Further details N/A References N/A","tags":"Projects","url":"2017/09/osswrvm/"},{"title":"PyRadarMet","text":"Python Fundamental Calculations in Radar Meteorology Quick description A python package that computes various fundamental characteristics for use in radar meteorology. Meant to process Level 1.5 to Level 2 data. Provides a quick calculation of individual radar characteristics. Homepage https://github.com/nguy/PyRadarMet Code Repository https://github.com/nguy/PyRadarMet Software Documentation https://github.com/nguy/PyRadarMet User group or forum page N/A License model GNU General Public Licencse V2 Year of first release 2014 Main programming laguage(s) Python Supported platforms Linux. Mac, Windows Type of software API /Library Further details Software is in beta version, please do contact me with any comments and/or questions. References N/A","tags":"projects","url":"2017/09/pyradarmet/"},{"title":"PyTDA","text":"Python Turbulence Detection Algorithm Quick description This software provides Python functions that will estimate turbulence from Doppler radar data ingested via Py- ART . Specifically, this software will estimate the cubic root of eddy dissipation rate, given input radar data containing reflectivity and spectrum width. Can be done on an individual sweep basis or by processing a full volume at once. If the latter, a new turbulence field is created within the Py- ART radar object. The turbulence algorithm is based on the NCAR Turbulence Detection Algorithm ( NTDA ), adapted to work with a single radar. Homepage https://github.com/nasa/PyTDA Code Repository https://github.com/nasa/PyTDA Software Documentation https://github.com/nasa/PyTDA User group or forum page N/A License model NASA Open Source 3.0 Year of first release 2015 Main programming laguage(s) Python Supported platforms Linux. Mac Type of software API /Library Further details For help see HELP file. For license see LICENSE .md. Installation Make sure this directory is in your PYTHONPATH Install Py- ART ( https://github.com/ ARM - DOE /pyart ) Run compile_pytda_cython_code.sh from the command line To use PyTDA: import pytda Then you have access to the functions pytda.calc_turb_sweep() and pytda.calc_turb_vol(). Obtaining the turbulence field for a volume can be as simple as: import pyart import pytda radar = pyart.io.read(‘YOUR_FILE_HERE') pytda.calc_turb_vol(radar) #See function's docstring for kwargs You will then have a field called ‘turbulence' that can be plotted, analyzed, or saved to file like any other Py- ART radar field. There is support for handling split cut volumes like NEXRAD , where reflectivity and spectrum width may be on separate sweeps. See the docstrings in the functions for more information. For 2010 and older NEXRAD data (V06 and earlier), recommend running on UF or CFRadial formats produced from the native Level 2 files via Radx, due to conflicts between Py- ART and older NEXRAD data models. References Turbulence and NTDA References Bohne, A. R. (1982). Radar detection of turbulence in precipitation environments. Journal of the Atmospheric Sciences, 39(8), 1819-1837. Doviak, R. J., and D. S. Zrnic, 1993: Doppler Radar and Weather Observations, Academic Press, 562 pp. Labitt, M. (1981). Coordinated radar and aircraft observations of turbulence (No. ATC -108). Federal Aviation Administration, Systems Research and Development Service. Williams, J. K., L. B. Cornman, J. Yee, S. G. Carson, G. Blackburn, and J. Craig, 2006: NEXRAD detection of hazardous turbulence. 44th AIAA Aerospace Sciences Meeting and Exhibit, Reno, NV . Lang, T. J., Python-based scientific analysis and visualization of precipitation systems at NASA Marshall Space Flight Center. 5th Symposium on Advances in Modeling and Analysis Using Python, American Meteorological Society, Phoenix, AZ . (available online at https://ams.confex.com/ams/95Annual/webprogram/Paper262779.html )","tags":"Projects","url":"2017/09/pytda/"},{"title":"Radar Tools for ArcGIS","text":"Radar Tools for ArcGIS Quick description This tools enable ArcGIS to order, download and visualize Level II and Level III data in vector and raster formats. Homepage https://bitbucket.org/striges/radar-tools Code Repository https://bitbucket.org/striges/radar-tools Software Documentation N/A User group or forum page N/A License model MIT Year of first release 2015 Main programming laguage(s) C#, Python Supported platforms Windows Type of software API /Library Further details This tool is an add-in to ArcGIS. The initial goal for this tool is to simplify daily GIS tasks in Hurricane Research Group, Department of Geography, University of Florida. We hope this is an effort to collaborate radar community and GIS community. This tool is now under heavy refactoring. It is expected to be finished during summer 2015. References N/A","tags":"Projects","url":"2017/09/radartoolsarcgis/"},{"title":"RSL","text":"Quick description NASA 's Radar Software Library ( RSL ) was developed to support the Tropical Rainfall Measuring Mission ( TRMM ). It is designed to read data from a variety of weather radar formats into a uniform structure, and provide tools for working with the data. It is written in the C language. Homepage http://trmm-fc.gsfc.nasa.gov/trmm_gv/software/rsl/index.html Code Repository N/A Software Documentation http://trmm-fc.gsfc.nasa.gov/trmm_gv/software/rsl/index.html User group or forum page N/A License model GNU Lesser General Public License ( LGPL ) Year of first release 1999 Main programming laguage(s) C Supported platforms Linux Type of software API /Library Further details N/A References N/A","tags":"Projects","url":"2017/09/rsl/"},{"title":"RSL in IDL","text":"Quick description RSL in IDL is a package of routines for working with TRMM Ground Validation radar data. The programs and data structures are modeled on TRMM GV 's C-based Radar Software Library ( RSL ), but are written in the Interactive Data Language ( IDL ). The idea is to provide the utility of RSL in an IDL environment. Homepage http://trmm-fc/trmm_gv/software/rsl_in_idl/RSL_in_IDL.html Code Repository N/A Software Documentation http://trmm-fc/trmm_gv/software/rsl_in_idl/RSL_in_IDL.html User group or forum page N/A License model GNU GPL Year of first release 2004 Main programming laguage(s) Interactive Data Language ( IDL ) Supported platforms Linux Type of software API /Library Further details N/A References N/A","tags":"Projects","url":"2017/09/rsl_in_idl/"},{"title":"wradlib","text":"Quick description wradlib was one of the first open source software solutions to support all essential steps of the weather radar processing chain. Since 2011, wradlib has evolved to be a professional solution for interactive weather radar data analysis and operational processing, with a large international user community in academia, government agencies, and the private sector. The user forum with more than 170 active members from all around the world provides an agile platform for exchange and support. Homepage https://wradlib.org/ Code Repositories The wradlib package https://github.com/wradlib/wradlib wradlib notebooks https://github.com/wradlib/wradlib-notebooks Sample data https://github.com/wradlib/wradlib-data Software Documentation http://wradlib.org/wradlib-docs User group or forum page https://groups.google.com/forum/?fromgroups#!forum/wradlib-users License model MIT Year of first release 2011 Main programming laguage(s) Python Supported platforms Linux, Mac, Windows Type of software API /Library References Heistermann, M., Jacobi, S., Pfaff, T. (2013): Technical Note: An open source library for processing weather radar data (wradlib). Hydrol. Earth Syst. Sci., 17, 863-871, doi:10.5194/hess-17-863-2013 .","tags":"Projects","url":"2017/09/wradlib/"}]}